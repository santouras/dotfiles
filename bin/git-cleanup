#!/bin/bash

# -b Removes local branches that have been merged into the current branch
# -r Cleanups all remotes
# -x Rebases against tracking branch
# -f Checks out master, fetch and ff, then prune merged and remotes
# @author Jude Aakjaer

prune_merged ()
{
  branches=$(git branch --merged | grep -v "\*")

  if [ $? -ne 0 ]; then
    echo "No branches to cleanup"
    return
  fi

  echo $branches | xargs -n 1 git branch -d
}

prune_remotes ()
{
  git remote | xargs -n 1 git remote prune
}

rebase_against_tracking ()
{
  remote_branch=$(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD))
  if [ -z $remote_branch ]; then
    echo "No remote tracking branch"
    return
  fi
  git fetch
  git rebase $remote_branch
}

while getopts ":xbrf" opt; do
  case $opt in
    x)
      rebase_against_tracking
      ;;
    f)
      git checkout master
      git fetch
      git ff
      prune_merged
      prune_remotes
      ;;
    b) prune_merged
      ;;
    r) prune_remotes
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

